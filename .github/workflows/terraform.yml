on:
  push:
    branches: [ "main" ]

jobs:
  apply:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Execute Terraform files in step1
        working-directory: ./step1
        run: |
          terraform init
          terraform plan
          terraform apply -input=false -auto-approve

      - name: Install Ansible and Run Playbook
        working-directory: ./step1
        run: |
          sudo apt update
          sudo apt install software-properties-common
          sudo add-apt-repository --yes --update ppa:ansible/ansible
          sudo apt install ansible
          public_ip=$(terraform output public_ip)
          # Create an Ansible inventory file with the public IP
          echo "[instance]" > ansible-inventory.ini
          echo "ansible_host=$public_ip" >> ansible-inventory.ini
          # Run your Ansible playbook
          ansible-playbook -i ansible-inventory.ini playbook.yml

      - name: Execute Terraform in step2
        working-directory: ./step2
        run: |
          terraform init
          terraform plan
          terraform apply -input=false -auto-approve

      - name: Execute Terraform in step3
        working-directory: ./step3
        run: |
          terraform init
          terraform plan
          terraform apply -input=false -auto-approve

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        if: failure()
